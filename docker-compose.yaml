version: '3'

services:

  #PHP App
  acceptorApp:
    image: digitalocean.com/php
    build:
      context: ./mailman
      dockerfile: ../docker-builds/acceptor/Dockerfile
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: acceptorApp
      SERVICE_TAGS: dev
    working_dir: /var/www
    links:
      - db
    volumes:
      - ./mailman:/var/www
      - ./docker-builds/acceptor/local.ini:/usr/local/etc/acceptor/conf.d/local.ini
    networks:
      - app-network

  #PHP App
  processorApp:
    image: digitalocean.com/php
    build:
      context: ./mailman
      dockerfile: ../docker-builds/processor/Dockerfile
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: processorApp
      SERVICE_TAGS: dev
    working_dir: /var/www
    command : bash -c "/usr/bin/supervisord -c /var/www/supervisord.conf"
    links:
      - db
    volumes:
      - ./mailman:/var/www
      - ./docker-builds/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Services
  acceptorServer:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    expose:
      - "80"
      - "443"
    volumes:
      - ./mailman:/var/www
      - ./docker-builds/nginx/acceptorServer/:/etc/nginx/conf.d/
    environment:
      SERVICE_NAME: acceptorServer
      SERVICE_TAGS: dev
    networks:
      - app-network

  # Load balancer
  loadBalancer:
    container_name: loadBalancer
    image: dockercloud/haproxy
    restart: unless-stopped
    environment:
      SERVICE_NAME: loadBalancer
      SERVICE_TAGS: dev
    links:
      - acceptorServer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:80"
    networks:
      - app-network


  ngrok:
    container_name: ngrok
    image: wernight/ngrok
    links:
      - loadBalancer
    environment:
      - NGROK_REGION=eu
      - NGROK_PORT=loadBalancer:80
    ports:
      - "4040:4040"
    networks:
      - app-network


  #MySQL Service
  db:
    container_name: db
    image: mysql:5.7
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: 53cret!@
      MYSQL_DATABASE: mailman
      MYSQL_USER: takeaway
      MYSQL_PASSWORD: 53cret!@
      SERVICE_NAME: db
      SERVICE_TAGS: dev
    volumes:
      - ./docker-builds/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "33060:3306"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
